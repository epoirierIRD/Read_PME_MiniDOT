#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jul 13 10:02:22 2023

@author: epoirier1
French National Research Institute for Sustainable Development (IRD)
"""

import pandas as pd
from matplotlib import pyplot
from datetime import date, time, datetime

# ************************************************************************************
# This code is to read a raw data file recorded by a PME MiniDOT logger
# It is not made to read a concatenated file 
# download the file raw_minidot_data.txt from this repo and save it on your machine
# then put the right path to it in the line path =

# path to the raw data file on your machine
path = '/home/path.to/my/raw_minidot_data.txt'

# df is a dataframe created with all the columns from raw_minidot_data.txt
# careful for row value in header=row. The row counts starts at row 0
df = pd.read_csv(path, header=2, delimiter=',', index_col=0)

# convert the index times from unix seconds to date time objects with the format AAAA-MM-DD HH:MM:SS
df.index = pd.to_datetime(df.index, unit='s')

# plot the column number you want to see (watch out, number of first column is 0)
# [0] column 0 is the battery voltage in Volts
# [1] column 1 is the dissolved oxygen in mg/l
# [2] column 2 is the temperature in Â°C
df.plot(y=df.columns[1], style='.-', markevery=5)

# show the first lines of the df dataframe
print(df.head())
# show the last lines of the df dataframe
print(df.tail())
# show the basic statistics of all columns of the dataframe
print(df.describe())

# ****************************************************************************

# This code is to select a period of the data between tow chosen times
# It is helpful if you want to "zoom in" on some data of interest

# ****************************************************************************
# Specify your the start1 and end1 time of the data your want to focus on
start1 = datetime(2023,5,23,9,30,00)
end1 = datetime(2023,5,23,11,25,00)

# this shorten the df dataframe into a smaller one called dfs
# containig the data of interest
dfs = df[start1 : end1]
# plot your data of interest
dfs.plot(y=dfs.columns[2], style='.-', markevery=5)
